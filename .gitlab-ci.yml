##############################################################
# Copyright 2023 Lawrence Livermore National Security, LLC
# (c.f. AUTHORS, NOTICE.LLNS, COPYING)
#
# This file is part of the Flux resource manager framework.
# For details, see https://github.com/flux-framework.
#
# SPDX-License-Identifier: LGPL-3.0
##############################################################

include:
  - local: '.gitlab/builds.gitlab-ci.yml'
  - local: '.gitlab/machines.gitlab-ci.yml'
  - project: 'lc-templates/id_tokens'
    file: 'id_tokens.yml'

stages:
  - build
  - test

default:
    retry: 1

.lc-variables:
    variables:
        LLNL_SERVICE_USER: fluxci
        FF_ENABLE_JOB_CLEANUP: "false"
        CUSTOM_CI_BUILDS_DIR: "/usr/WS1/$$USER/gitlab-runner-builds-dir"
        # Note: the above will not work with /usr/workspace, you must specify WS1 or WS2

## Job Specifications
.test-core:
    extends: .lc-variables
    variables:
        PYTHON: "/usr/bin/python3"
        debug: t
        FLUX_TESTS_LOGFILE: t
    script:
        - echo $CI_DIRECTORY
        - cd ${CORE_BUILD_DIR}
        - lstopo --of xml >$(hostname).xml
        - export FLUX_HWLOC_XMLFILE=$(pwd)/$(hostname).xml
        - make -j $(nproc) check
        ## The following is teardown to make sure the xml file doesn't get reused
        ## but maybe it's unnecessary. Subsequent tests will run under new shells...
        - rm ${FLUX_HWLOC_XMLFILE}
        - unset FLUX_HWLOC_XMLFILE

.test-pmix:
    extends: .lc-variables
    variables:
        PYTHON: "/usr/bin/python3"
        debug: t
        FLUX_TESTS_LOGFILE: t
    script:
        - export PKG_CONFIG_PATH=${CORE_INSTALL_PREFIX}/lib/pkgconfig:$(pkg-config --variable pc_path pkg-config)
        - module load openmpi
        - export PKG_CONFIG_PATH=$(dirname $(which mpicc))/../lib/pkgconfig:${PKG_CONFIG_PATH} 
        - cd ${CI_DIRECTORY}
        - git clone https://github.com/flux-framework/flux-pmix
        - cd flux-pmix
        - ./autogen.sh
        - ./configure --prefix=${CORE_INSTALL_PREFIX}
        - make -j $(nproc) check
        - make -j $(nproc) install

.test-coral2:
    extends: .lc-variables
    variables:
        PYTHON: "/usr/bin/python3"
        debug: t
        FLUX_TESTS_LOGFILE: t
    script:
        - cd ${CI_DIRECTORY}
        - export PKG_CONFIG_PATH=${CORE_INSTALL_PREFIX}/lib/pkgconfig:$(pkg-config --variable pc_path pkg-config)
        - git clone https://github.com/flux-framework/flux-coral2
        - cd flux-coral2
        - ./autogen.sh
        - ./configure --prefix=${CORE_INSTALL_PREFIX}
        - make -j $(nproc) check
        - make -j $(nproc) install

.test-sched:
    extends: .lc-variables
    variables:
        PYTHON: "/usr/bin/python3"
        debug: t
        FLUX_TESTS_LOGFILE: t
    script:
        - cd ${CI_DIRECTORY}
        - export PKG_CONFIG_PATH=${CORE_INSTALL_PREFIX}/lib/pkgconfig:$(pkg-config --variable pc_path pkg-config)
        - git clone https://github.com/flux-framework/flux-sched
        - cd flux-sched
        - module load gcc 
        - ${CORE_INSTALL_PREFIX}/bin/flux ./configure
        - make -j $(nproc)
        - make -j $(nproc) install
        - ctest -j 16 -E "t5000-valgrind.t"

.test-core-mpi:
    extends: .lc-variables
    ## this will need coral2 XOR pmix depending on system (hopefully both eventually)
    variables:
        PYTHON: "/usr/bin/python3"
    script:
        - export MPI_TESTS_DIRECTORY=$(pwd)/mpi
        - export FTC_DIRECTORY=$(pwd)
        - flux run -N2 $CORE_INSTALL_PREFIX/bin/flux start $MPI_TESTS_DIRECTORY/outer_script.sh

corona-core-build:
    extends: 
        - .build-core
        - .corona
    stage: build

corona-core-test:
    needs: ["corona-core-build"]
    extends: 
        - .test-core
        - .corona
    stage: test

corona-sched-test:
    needs: ["corona-core-build"]
    extends:
        - .test-sched
        - .corona
    stage: test

poodle-core-build:
    extends: 
        - .build-core
        - .poodle
    stage: build

poodle-core-test:
    needs: ["poodle-core-build"]
    extends: 
        - .test-core
        - .poodle
    stage: test

tioga-core-build:
    extends: 
        - .build-core
        - .tioga
    stage: build

tioga-core-test:
    needs: ["tioga-core-build"]
    extends: 
        - .test-core
        - .tioga
    stage: test

tioga-coral2-test:
    needs: ["tioga-core-build"]
    extends:
        - .test-coral2
        - .tioga
    stage: test

tioga-sched-test:
    needs: ["tioga-core-build"]
    extends:
        - .test-sched
        - .tioga
    stage: test

tioga-mpi-test:
    needs: ["tioga-core-build", "tioga-coral2-test"]
    extends:
        - .test-core-mpi
        - .tioga
    variables:
        LLNL_FLUX_SCHEDULER_PARAMETERS: "-N 2 -q pdebug"
    stage: test

corona-pmix-test:
    needs: ["corona-core-build"]
    extends:
        - .test-pmix
        - .corona
    stage: test

corona-mpi-test:
    needs: ["corona-core-build", "corona-pmix-test"]
    extends:
        - .test-core-mpi
        - .corona
    variables:
        LLNL_FLUX_SCHEDULER_PARAMETERS: "-N 2 -q pdebug"
    stage: test
